from blob_scan import detect_weeds
from farmbot_status import get_current_position
from movement import move_to, run_laserification_sequence
from grid_coords import generate_grid_positions
from send_laser import send_laser_sequence
from send_to_farmbot import send_weed_to_farmbot
from logger import init_logger                                  # la plupart des imports sont inutiles (peut √™tre ?)

import time

# --- Param√®tres de la grille (ajust√©s au bac FarmBot Express 1.1) --- probablement inutiles car d√©j√† dans grid_coords.py mais √† v√©rifier plus tard
GRID_WIDTH = 6       # 1200 mm / 205 mm ‚âà 6
GRID_HEIGHT = 20     # 3000 mm / 151 mm ‚âà 20
STEP_X = 205         # Largeur r√©elle couverte par l'image
STEP_Y = 151         # Hauteur r√©elle couverte par l'image

ORIGIN_X = 0
ORIGIN_Y = 0
Z_HEIGHT = 0         # Hauteur fixe (√† ajuster si besoin)

DELAI_MOUVEMENT = 6.0 # D√©lai entre chaque mouvement (en secondes)
SIMULATION_MODE = False  # True = pas de mouvement r√©el, False = d√©placement r√©el

# --- Fonction principale ---
logger = init_logger()

def scan_area():
    positions = generate_grid_positions()  # G√©n√®re les coordonn√©es de la grille √† scanner depuis grid_coords.py
    total = len(positions)
    logger.info(f"üîÅ D√©marrage du scan sur {total} positions...\n")

    for i, (x, y, z) in enumerate(positions):
        logger.info(f"üìç Position {i+1}/{total} : X={x} mm, Y={y} mm, Z={z} mm")

        if SIMULATION_MODE:
            logger.info("üß™ Mode simulation : aucun d√©placement r√©el")
        else:
            try:
                move_to(x, y, z)  # D√©placement vers la position (x, y, z)
            except Exception as e:
                logger.error(f"‚ùå Erreur de d√©placement : {e}")
                continue

        # D√©tection d'image simul√©e √† la position (x, y)
        image, weeds = detect_weeds()
        logger.info(f"  -> {len(weeds)} mauvaise(s) herbe(s) d√©tect√©e(s) √† cette position\n")

        # Envoi des donn√©es pour chaque mauvaise herbe d√©tect√©e
        if not SIMULATION_MODE and weeds:
            for weed in weeds:
                try:
                    send_weed_to_farmbot(weed["x"], weed["y"])
                    logger.info(f"üì§ Mauvaise herbe envoy√©e √† ({weed['x']}, {weed['y']})")
                except Exception as e:
                    logger.error(f"‚ùå Erreur d'envoi de mauvaise herbe : {e}")

            send_laser_sequence()    # Envoie la s√©quence de laserification bien clean de send_laser.py
            logger.info("‚úÖ S√©quence de laserification envoy√©e.")

        time.sleep(DELAI_MOUVEMENT)  # Pause entre les captures (pour simuler le temps de d√©placement)

    logger.info("‚úÖ Scan termin√©.")

if __name__ == "__main__":
    scan_area()